local Base = GameUI
local CSelectZoneUI = class(Base)

function CSelectZoneUI:ctor(ui)
    Base.ctor(self, ui)
    self.IsFullScreen = true
    self.Layer = UIManager.Layer.FullWindow
end

function CSelectZoneUI:Initialize()
    self:SetEvent(
        self.HashIDTable.btn_EnterGame,
        UIManager.EID.PointerClick,
        self:GetSelfFunc(CSelectZoneUI.OnClickbtn_EnterGame)
    )
    self:SetEvent(
        self.HashIDTable.btn_Exit,
        UIManager.EID.PointerClick,
        self:GetSelfFunc(CSelectZoneUI.OnClickbtn_Exit)
    )
    --self:SetCText(self.HashIDTable.text_zone,"待赋的值")
end

function CSelectZoneUI:OnClickbtn_EnterGame()
    print("OnClickbtn_EnterGame")

    -- CSGlobal.RegProto(10002, CSelectZoneUI.RecServerData)
    -- CSelectZoneUI.CSelectZoneUI(
    --     10002,
    --     require("Proto.RoleOperation_LogOnGameServerReturnProto").New(),
    --     CSelectZoneUI.RecServerData
    -- )

    NetManager.RegEvent2(require("Proto.RoleOperation_LogOnGameServerReturnProto").New(), CSelectZoneUI.RecServerData)

    -- CSGlobal.RegProto(10002, CSelectZoneUI.RecServerData)
    local proto = require("Proto.RoleOperation_LogOnGameServerProto").New() --实例化一个协议对象
    proto.AccountId = 9999
    proto.SendProto(proto)
end

function CSelectZoneUI.RecServerData(RoleOperation_LogOnGameServerReturnProto)
    local d = Json.encode(RoleOperation_LogOnGameServerReturnProto)
    print(d)
end

function CSelectZoneUI:OnClickbtn_Exit()
    print("OnClickbtn_Exit")
    self:Close()
    self:FireEvent(EventCode.UI.OpenUI, "Login")
end

function CSelectZoneUI:UIEnable()
end

function CSelectZoneUI:LoadUICallback()
end

function CSelectZoneUI:OnDestroy()
end

return CSelectZoneUI
